#!/bin/bash

set -e

SCRIPTPATH=$(pwd -P)
cd "$SCRIPTPATH"

MAVEN_QUIET=""
INTELLIJ_VERSION=false

while getopts ":hqvB" option; do
    case $option in
        h) echo "usage: $0 [-h] [-q] [-v] [-B]"; exit ;;
        q) MAVEN_QUIET="-q" ;;
        v) INTELLIJ_VERSION=true ;;
        B) MAVEN_QUIET="--batch-mode" ;;
        ?) echo "error: option -$OPTARG is not implemented"; exit ;;
    esac
done

ARTIFACTS_DIR="artifacts"
# check dir exists
if [ ! -d  "$ARTIFACTS_DIR" ]; then
    echo "Creating artifacts directory $ARTIFACTS_DIR"
    mkdir -p $ARTIFACTS_DIR
fi

# echo shell commands when they are executed.
set -x

# Build Utils
mvn install -f $SCRIPTPATH/Utils/pom.xml -Dmaven.repo.local=$SCRIPTPATH/.repository $MAVEN_QUIET
mvn install -f $SCRIPTPATH/PluginsAndFeatures/AddLibrary/AzureLibraries/pom.xml -Dmaven.repo.local=$SCRIPTPATH/.repository $MAVEN_QUIET

# # Build eclipse plugin
mvn clean install -f $SCRIPTPATH/PluginsAndFeatures/azure-toolkit-for-eclipse/pom.xml $MAVEN_QUIET
cp ./PluginsAndFeatures/azure-toolkit-for-eclipse/WindowsAzurePlugin4EJ/target/WindowsAzurePlugin4EJ*.zip ./$ARTIFACTS_DIR/WindowsAzurePlugin4EJ.zip

chmod +x ./tools/IntellijVersionHelper

# Build intellij 2018.1 plugin
if [ $INTELLIJ_VERSION == "true" ] ; then
    ./tools/IntellijVersionHelper 2018.1
fi

(cd PluginsAndFeatures/azure-toolkit-for-intellij && ./gradlew clean buildPlugin -s -Pidea_version=IC-2018.1 -Pdep_plugins=org.intellij.scala:2018.1.8 -Pbuild_common_code_with=idea)

cp ./PluginsAndFeatures/azure-toolkit-for-intellij/idea/build/distributions/azure-toolkit-for-intellij.zip ./$ARTIFACTS_DIR/azure-toolkit-for-intellij-2018.1.zip

# Build intellij 2018.2 compatible plugin
if [ $INTELLIJ_VERSION == "true" ] ; then
    ./tools/IntellijVersionHelper 2018.2
fi

(cd PluginsAndFeatures/azure-toolkit-for-intellij && ./gradlew clean buildPlugin -s -Pbuild_common_code_with=idea)
cp ./PluginsAndFeatures/azure-toolkit-for-intellij/idea/build/distributions/azure-toolkit-for-intellij.zip ./$ARTIFACTS_DIR/azure-toolkit-for-intellij-2018.2.zip

# Remove extracted IDEs to get more disk space
# rm -fr $HOME/.gradle/caches/modules-2/files-*/com.jetbrains.intellij.idea/

# Build JetBrains Rider 2018.1 plugin
(cd PluginsAndFeatures/azure-toolkit-for-intellij && ./gradlew --stacktrace clean -s)
(cd PluginsAndFeatures/azure-toolkit-for-intellij && ./gradlew --stacktrace :rider:buildPlugin -s -Pbuild_common_code_with=rider)

cp ./PluginsAndFeatures/azure-toolkit-for-intellij/rider/build/distributions/azure-toolkit-for-rider.zip ./$ARTIFACTS_DIR/azure-toolkit-for-rider-2018.1.zip

echo "ALL BUILD SUCCESSFUL"
